<?php

namespace CrazyCodeGen\Definition\Expressions\Operators\Assignment;

use CrazyCodeGen\Common\Traits\FlattenFunction;
use CrazyCodeGen\Definition\Base\ProvidesClassReference;
use CrazyCodeGen\Definition\Base\ProvidesVariableReference;
use CrazyCodeGen\Definition\Base\Tokenizes;
use CrazyCodeGen\Definition\Expressions\Instruction;
use CrazyCodeGen\Definition\Traits\ComputableTrait;
use CrazyCodeGen\Rendering\Renderers\Contexts\RenderContext;
use CrazyCodeGen\Rendering\Renderers\Rules\RenderingRules;
use CrazyCodeGen\Rendering\Tokens\CharacterTokens\EqualToken;
use CrazyCodeGen\Rendering\Tokens\CharacterTokens\SpacesToken;
use CrazyCodeGen\Rendering\Tokens\Token;

class AssignOp extends Instruction
{
    use FlattenFunction;
    use ComputableTrait;

    public function __construct(
        public string|Token|Tokenizes|ProvidesVariableReference                                       $subject,
        public int|float|string|bool|Token|Tokenizes|ProvidesClassReference|ProvidesVariableReference $value,
    ) {
        if (is_string($this->subject)) {
            $this->subject = new Token($this->subject);
        } elseif ($this->subject instanceof ProvidesVariableReference) {
            $this->subject = $this->subject->getVariableReference();
        }
        if ($this->isScalarType($this->value)) {
            $this->value = $this->getValOrReturn($this->value);
        } elseif ($this->value instanceof ProvidesClassReference) {
            $this->value = $this->value->getClassReference();
        } elseif ($this->value instanceof ProvidesVariableReference) {
            $this->value = $this->value->getVariableReference();
        }
        parent::__construct(instructions: [
            $this->subject,
            new SpacesToken(),
            new EqualToken(),
            new SpacesToken(),
            $this->value
        ]);
    }

    public function getTokens(RenderContext $context, RenderingRules $rules): array
    {
        return parent::getTokens($context, $rules); // TODO: Change the autogenerated stub
    }
}
